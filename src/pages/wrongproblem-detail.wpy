<style>
page{
    background-color: white;
}
</style>

<template>
    <view class="padding">
        <view class="flex p-xs mb-sm">
            <view class="flex-sub flex justify-start">
                <button class="cu-btn bg-olive round shadow" @tap="onClickEditWrongProblem">编辑错题</button>
            </view>
        </view>
    </view>

    <view class="solid-bottom padding">
        <view class="text-black text-xl text-bold text-cut">
            {{Sname}}的错题
        </view>
        <view class="text-black text-xl text-bold text-cut">
            {{wrongProblem.Wtitle}}
        </view>
        <view class="flex margin">
            <view class="flex-start cu-tag radius bg-green text-lg light">
                {{wrongProblem.Wgrade}}
            </view>
            <view class="flex-start cu-tag radius bg-brown text-lg light">
                {{wrongProblem.Wsubject}}
            </view>
        </view>
    </view>
    <view class="padding solid-bottom">
        <view class="text-xl text-black text-bold">
            题目描述: {{wrongProblem.Wdescription}}
        </view>

        <view class="margin text-lg" wx:if="{{wrongProblem.WproblemTxt!=''}}">
            {{wrongProblem.WproblemTxt}}
        </view>

        <view class="margin" wx:if="{{wrongProblem.WproblemPath!=''}}">
            <view wx:if="{{wrongProblem.Wtype!='听写'}}" >
                <view wx:for="{{imageListOfName}}" wx:key="index" wx:for-item="imgOfName">
                    <image src="{{imgOfName!=imageUrl?imgOfName:''}}" mode="widthFix" @tap="ViewImageOfName" data-url="{{imgOfName}}"></image>
                </view>
            </view>
            
            <audio wx:if="{{wrongProblem.Wtype=='听写' && wrongProblem.WproblemPath!=''}}" src="{{wrongProblem.WproblemPath?(audioUrl + wrongProblem.WproblemPath):''}}" controls="true" name="" author=""></audio>

            
        </view>
        
        
    </view>
    <view class="padding solid-bottom">
        <view class="text-xl text-black text-bold">
            正确答案
        </view>

        <view class="margin text-lg" wx:if="{{wrongProblem.WanswerTxt!='null'}}">
            {{wrongProblem.WanswerTxt}}
        </view>

        <view class="margin" wx:if="{{wrongProblem.WanswerPath!='null'}}">
            <view wx:for="{{imageListOfAnswer}}" wx:key="index" wx:for-item="imgOfAnswer">
                <image src="{{imgOfAnswer!=imageUrl?imgOfAnswer:''}}" mode="widthFix" @tap="ViewImageOfAnswer" data-url="{{imgOfAnswer}}"></image>
            </view>
        </view>
    </view>
    
    <view class="padding solid-bottom">
        <view class="text-xl text-black text-bold">
            我的答案
        </view>

        <view class="margin text-lg" wx:if="{{wrongProblem.WmyAnswerTxt!='null'}}">
            {{wrongProblem.WmyAnswerTxt}}
        </view>

        <view class="margin" wx:if="{{wrongProblem.WmyAnswerPath!='null'}}">
            <view wx:for="{{imageListOfMyAnswer}}" wx:key="index" wx:for-item="imgOfMyAnswer">
                <image src="{{imgOfMyAnswer!=imageUrl?imgOfMyAnswer:''}}" mode="widthFix" @tap="ViewImageOfMyAnswer" data-url="{{imgOfMyAnswer}}"></image>
            </view>
        </view>
    </view>
    
    <view class="padding">
        <view class="flex p-xs mb-sm">
            <view class="padding flex-sub flex justify-center">
                <button class="cu-btn bg-red round shadow lg" @tap="onClickDeleteWrongProblem">删除错题</button>
            </view>
        </view>
    </view>
    

</template>

<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
    config = {
        usingComponents:{
        }
    }

    data = {
        Wid:0,
        Sname:"",
        wrongProblem:{},
        imageUrl:wepy.$instance.globalData.serverUrl + '/app/file/get_image?name=',
        audioUrl:wepy.$instance.globalData.serverUrl + '/app/file/get_audio?name=',
        imageListOfName: [],
        imageListOfAnswer: [],
        imageListOfMyAnswer: [],
    }

    methods = {
        
        ViewImageOfName(e) {
            let self = this
            console.log(self.imageUrl + e.currentTarget.dataset.url)
            wx.previewImage({
                urls: self.imageListOfName,
                current: self.imageUrl + e.currentTarget.dataset.url
            });
        },

        ViewImageOfAnswer(e) {
            let self = this
            console.log(self.imageUrl + e.currentTarget.dataset.url)
            wx.previewImage({
                urls: self.imageListOfAnswer,
                current: self.imageUrl + e.currentTarget.dataset.url
            });
        },

        ViewImageOfMyAnswer(e) {
            let self = this
            console.log(self.imageUrl + e.currentTarget.dataset.url)
            wx.previewImage({
                urls: self.imageListOfMyAnswer,
                current: self.imageUrl + e.currentTarget.dataset.url
            });
        },

        onClickEditWrongProblem(e){
            let self = this
            wx.navigateTo({
                url:"edit-wrongproblem?wid="+self.wrongProblem.Wid,
            })
        },

        onClickDeleteWrongProblem(){
            let self = this
            wx.showModal({
                title: '删除错题',
                content: '确定要删除此错题？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        wepy.request({
                            url:wepy.$instance.globalData.serverUrl + '/app/wrong_problem/delete_wrong_problem/:id' + '?Wid=' + self.wrongProblem.Wid.toString(),
                            method:'DELETE',
                            header: wepy.$instance.setHeader(),
                            success: function(res) {
                                console.log(res)
                                if (res.data.Code == 1){
                                    wepy.showToast({
                                        title: '删除成功', //提示的内容,
                                        icon: 'success', //图标,
                                        duration: 2000, //延迟时间,
                                        mask: true, //显示透明蒙层，防止触摸穿透,
                                        success: function(){
                                            setTimeout(function(){
                                                wepy.navigateBack({
                                                    delta: 1
                                                })
                                            }, 1000)
                                        },
                                    });
                                }
                            }
                        })
                    }
                }
            })
        }
    }

    getWrongProblem(){
        let self = this
        wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/wrong_problem/get_wrong_problem',
                method:'GET',
                header: wepy.$instance.setHeader(),
                data:{
                    Wid:self.Wid,
                },
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        self.wrongProblem = res.data.Data
                        if(res.data.Data.WproblemPath!=""){
                            let tmpList = res.data.Data.WproblemPath.split(";")
                            self.imageListOfName = tmpList.map(x => self.imageUrl + x)
                        }
                        if(res.data.Data.WanswerPath!=""){
                            let tmpList = res.data.Data.WanswerPath.split(";")
                            self.imageListOfAnswer = tmpList.map(x => self.imageUrl + x)
                        }
                        if(res.data.Data.WmyAnswerPath!=""){
                            let tmpList = res.data.Data.WmyAnswerPath.split(";")
                            self.imageListOfMyAnswer = tmpList.map(x => self.imageUrl + x)
                        }
                        self.$apply()
                    }
                }
            })
    }

    onLoad(options) {
        let self = this

        self.Wid = options.wid
        self.Sname = options.sname

    }

    onShow(){
        let self = this
        self.getWrongProblem()
    }
}
</script>
